stages:
  - build

variables:
  IMAGE: ${CI_REGISTRY_IMAGE}

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"username\":\"${CI_REGISTRY_USER}\",\"password\":\"${CI_REGISTRY_PASSWORD}\"}}}" > /kaniko/.docker/config.json

    # Git Branch/Tag to Docker Image Tag Mapping
    #   * Default Branch: main -> latest
    #   * Branch: feature/my-feature -> branch-feature-my-feature
    #   * Tag: v1.0.0/beta2 -> v1.0.0-beta2
    - |
      set -- "--destination" "${IMAGE}:${CI_COMMIT_SHORT_SHA}"
      if [ "${CI_COMMIT_REF_NAME}" = "${CI_DEFAULT_BRANCH}" ]; then
        set -- "$@" "--destination" "${IMAGE}:latest"
      elif [ -n "${CI_COMMIT_TAG}" ]; then
        NOSLASH=$(echo "${CI_COMMIT_TAG}" | tr -s / -)
        SANITIZED=$(echo "${NOSLASH}" | tr -cd '[:alnum:]-')
        set -- "$@" "--destination" "${IMAGE}:${SANITIZED}"
      else
        NOSLASH=$(echo "${CI_COMMIT_REF_NAME}" | tr -s / -)
        SANITIZED=$(echo "${NOSLASH}" | tr -cd '[:alnum:]-')
        set -- "$@" "--destination" "${IMAGE}:branch-${SANITIZED}"
      fi

      if [ -n "${http_proxy}" ]; then
        set -- "$@" "--build-arg" "http_proxy=${http_proxy}"
      fi
      if [ -n "${https_proxy}" ]; then
        set -- "$@" "--build-arg" "https_proxy=${https_proxy}"
      fi
      if [ -n "${no_proxy}" ]; then
        set -- "$@" "--build-arg" "no_proxy=${no_proxy}"
      fi
      
      /kaniko/executor "$@" \
        --context "${CI_PROJECT_DIR}" \
        --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
